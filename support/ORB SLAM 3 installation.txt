
-------------------------------------------------------------------
few basics
-------------------------------------------------------------------

sudo apt install build-essential dkms linux-headers-$(uname -r)
sudo apt install vim
sudo apt install git

-------------------------------------------------------------------
Install Pangolin
-------------------------------------------------------------------

sudo apt install cmake
sudo apt-get install libboost-all-dev
sudo apt install libeigen3-dev
sudo apt-get install cmake pkg-config
sudo apt-get install mesa-utils libglu1-mesa-dev freeglut3-dev mesa-common-dev
sudo apt-get install libglew-dev libglfw3-dev libglm-dev
sudo apt-get install libao-dev libmpg123-dev

git clone --recursive https://github.com/stevenlovegrove/Pangolin.git
cd Pangolin/
./scripts/install_prerequisites.sh --dry-run recommended
cmake -B build
cmake --build build
sudo make install

-------------------------------------------------------------------
Download opencv
-------------------------------------------------------------------

sudo apt install build-essential cmake git pkg-config libpng-dev libtiff-dev gfortran openexr libgtk-3-dev libavcodec-dev libgstreamer-plugins-base1.0-dev libgstreamer1.0-dev libavformat-dev libswscale-dev libv4l-dev libxvidcore-dev libx264-dev libjpeg-dev libatlas-base-dev python3-dev python3-numpy libtbb2 libtbb-dev libdc1394-22-dev libopenexr-dev
sudo apt install libopenjp2-7 libopenjp2-tools
sudo apt install jasper

Download opencv and opencv contrib:
https://www.linuxfromscratch.org/blfs/view/10.0-systemd/general/opencv.html
cd opencv-4.4.0/
mkdir -p build && cd build
cmake -D CMAKE_BUILD_TYPE=RELEASE -D CMAKE_INSTALL_PREFIX=/usr/local -D OPENCV_GENERATE_PKGCONFIG=ON -D OPENCV_EXTRA_MODULES_PATH=~/opencv_build/opencv_contrib-4.4.0/modules ..
nproc
make -j4
sudo make install

-------------------------------------------------------------------
ORB SLAM3 installation
-------------------------------------------------------------------

sudo apt-get install libpcap-dev libssl-dev

git clone https://github.com/UZ-SLAMLab/ORB_SLAM3.git ORB_SLAM3
cd ORB_SLAM3/
vi CMakeLists.txt
sed -i 's/++11/++14/g' CMakeLists.txt
chmod +x build.sh
./build.sh

./build.sh 2> err
sudo make install

-------------------------------------------------------------------
Run examples
-------------------------------------------------------------------

Download euroc - MH_01_easy
use:
wget -c http://robotics.ethz.ch/~asl-datasets/ijrr_euroc_mav_dataset/machine_hall/MH_01_easy/MH_01_easy.zip
or
download from https://projects.asl.ethz.ch/datasets/doku.php?id=kmavvisualinertialdatasets

./Examples/Monocular/mono_euroc ./Vocabulary/ORBvoc.txt ./Examples/Monocular/EuRoC.yaml ./Datasets/MH_01_easy/ ./Examples/Monocular/EuRoC_TimeStamps/MH01.txt dataset-MH01_mono
./Examples/Monocular-Inertial/mono_inertial_euroc ./Vocabulary/ORBvoc.txt ./Examples/Monocular-Inertial/EuRoC.yaml ./Datasets/MH_01_easy/ ./Examples/Monocular-Inertial/EuRoC_TimeStamps/MH01.txt dataset-MH01_monoi

-------------------------------------------------------------------
ROS and Webcam
-------------------------------------------------------------------

Follow ros install steps and run webcam:
https://medium.com/@tristan.sch/setting-up-a-virtual-machine-with-orb-slam-3-1a12e7905cf5 
For noetic install:
http://wiki.ros.org/noetic/Installation/Ubuntu
remember to change cpp version in ros compilation too: https://github.com/UZ-SLAMLab/ORB_SLAM3/issues/458 
change open cv version in CMakeLists for ROS compilation
ros compilation issue fix	https://github.com/nindanaoto/ORB_SLAM3 - merge these change in the codebase

